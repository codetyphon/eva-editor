{"version":3,"sources":["nodeTypes/index.ts","nodeTypes/config.tsx","nodeTypes/scene.tsx","nodeTypes/game.tsx","nodeTypes/gameObject.tsx","nodeTypes/graphics.tsx","nodeTypes/transform.tsx","nodeTypes/image.tsx","preview.tsx","propertiesPanel.tsx","components/color.tsx","nodes.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["nodeTypes","Config","data","className","style","label","type","position","Position","Right","Scene","Left","Game","GameObject","Graphics","Transform","P","Image","Preview","confs","canvasRef","useRef","useState","bgcolor","setBgColor","x","y","postion","setPostion","width","height","size","setSize","name","uuidv4","src","imageRes","setImageRes","useEffect","forEach","conf","console","log","id","kv","c","replace","resource","addResource","RESOURCE_TYPE","IMAGE","image","url","preload","rendererSystem","RendererSystem","canvas","current","transparent","resolution","window","devicePixelRatio","enableScroll","renderType","game","frameRate","autoStart","systems","GraphicsSystem","ImgSystem","bg","origin","g","addComponent","graphics","beginFill","drawRect","endFill","scene","addChild","scale","Img","alt","ref","CheckboxGroup","Checkbox","Group","Components","Input","Color","onChange","value","color","setColor","padding","enableAlpha","mode","InputNumber","getComponentByName","component","key","PropertiesPanel","fields","update","form","useMemo","createForm","layout","map","field","title","required","initialValue","decorator","FormItem","hidden","length","onSubmit","values","nodes","dataSource","source","target","App","setConfs","elements","setElements","setId","setType","setFields","onElementClick","_event","node","onConnect","params","els","addEdge","onElementsRemove","elementsToRemove","removeElements","deleteKeyCode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88e7ba16.chunk.js","sourcesContent":["import Config from \"./config\";\r\nimport Scene from \"./scene\"\r\nimport Game from \"./game\"\r\nimport GameObject from \"./gameObject\";\r\nimport Graphics from \"./graphics\"\r\nimport Transform from \"./transform\"\r\nimport Image from \"./image\"\r\nconst nodeTypes = {\r\n    Config,\r\n    Scene,\r\n    Game,\r\n    GameObject,\r\n    Graphics,\r\n    Transform,\r\n    Image\r\n};\r\n\r\nexport default nodeTypes","import { Handle, Position } from 'react-flow-renderer';\r\nexport default function Config({ data }: any) {\r\n    return (\r\n        <div className=\"node_base_components\" style={{\r\n\r\n        }}>\r\n            <div>\r\n                <h2>Config</h2>{data.label}</div>\r\n            <Handle\r\n                type=\"source\"\r\n                position={Position.Right}\r\n            />\r\n        </div>\r\n    );\r\n};","import { Handle, Position } from 'react-flow-renderer';\nexport default function Scene({ data }: any) {\n    return (\n        <div className=\"node_base_components\" style={{\n\n        }}>\n            <Handle\n                type=\"target\"\n                position={Position.Left}\n            />\n            <div>\n                <h2>Scene</h2>{data.label}</div>\n            <Handle\n                type=\"source\"\n                position={Position.Right}\n            />\n        </div>\n    );\n};","import { Handle, Position } from 'react-flow-renderer';\nexport default function Game({ data }: any) {\n    return (\n        <div className=\"node_base_components\" style={{\n\n        }}>\n            <div>\n                <h2>Game</h2>{data.label}</div>\n            <Handle\n                type=\"target\"\n                position={Position.Left}\n            />\n        </div>\n    );\n};","import { Handle, Position } from 'react-flow-renderer';\nexport default function GameObject({ data }: any) {\n    return (\n        <div className=\"node_base_components\" style={{\n\n        }}>\n            <Handle\n                type=\"target\"\n                position={Position.Left}\n            />\n            <div>\n                <h3>GameObject</h3>{data.label}</div>\n            <Handle\n                type=\"source\"\n                position={Position.Right}\n            />\n        </div>\n    );\n};","import { Handle, Position } from 'react-flow-renderer';\r\nexport default function Graphics({ data }: any) {\r\n    return (\r\n        <div className=\"node_base_components\" style={{\r\n\r\n        }}>\r\n            <div>\r\n                <h4>Graphics</h4>{data.label}</div>\r\n            <Handle\r\n                type=\"source\"\r\n                position={Position.Right}\r\n            />\r\n        </div>\r\n    );\r\n};","import { Handle, Position as P } from 'react-flow-renderer';\r\nexport default function Transform({ data }: any) {\r\n    return (\r\n        <div className=\"node_base_components\" style={{\r\n\r\n        }}>\r\n            <div><h4>Transform</h4>{data.label}</div>\r\n            <Handle\r\n                type=\"source\"\r\n                position={P.Right}\r\n            />\r\n        </div>\r\n    );\r\n};","import { Handle, Position } from 'react-flow-renderer';\nexport default function Image({ data }: any) {\n    return (\n        <div className=\"node_base_components\" style={{\n\n        }}>\n            <div>\n                <h4>Image</h4>{data.label}</div>\n            <Handle\n                type=\"source\"\n                position={Position.Right}\n            />\n        </div>\n    );\n};","import { Game, GameObject, resource, RESOURCE_TYPE } from '@eva/eva.js'\r\nimport { RendererSystem } from '@eva/plugin-renderer'\r\nimport { Graphics, GraphicsSystem } from '@eva/plugin-renderer-graphics'\r\nimport { Img, ImgSystem } from '@eva/plugin-renderer-img'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst Preview = ({ confs }: any) => {\r\n\r\n    const canvasRef = useRef(null)\r\n\r\n    const [bgcolor, setBgColor] = useState(\"0xde3249\")\r\n    const [postion, setPostion] = useState({\r\n        x: 100,\r\n        y: 100\r\n    })\r\n    const [size, setSize] = useState({\r\n        width: 100,\r\n        height: 100\r\n    })\r\n\r\n    const [imageRes, setImageRes] = useState({\r\n        name: uuidv4(),\r\n        src: \"https://codetyphon.github.io/eva-editor/chrome-100.png\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        confs.forEach((conf: any) => {\r\n            console.log(conf)\r\n            const { id, type, kv }: any = conf\r\n            if (id === \"background_component\") {\r\n                const c = kv['color'].replace('#', '0x')\r\n                setBgColor(c)\r\n            }\r\n            if (id === \"Transform_for_player\") {\r\n                setPostion({\r\n                    x: kv.x,\r\n                    y: kv.y\r\n                })\r\n                setSize({\r\n                    width: kv.width,\r\n                    height: kv.height\r\n                })\r\n            }\r\n            if (id === \"image\") {\r\n                console.log('set src', kv.src)\r\n                setImageRes({\r\n                    name: uuidv4(),\r\n                    src: kv.src\r\n                })\r\n            }\r\n        });\r\n    }, [confs])\r\n\r\n    resource.addResource([\r\n        {\r\n            name: imageRes.name,\r\n            type: RESOURCE_TYPE.IMAGE,\r\n            src: {\r\n                image: {\r\n                    type: 'png',\r\n                    url: imageRes.src\r\n                }\r\n            },\r\n            preload: true\r\n        }\r\n    ])\r\n\r\n    const rendererSystem = new RendererSystem({\r\n        canvas: canvasRef.current,//document.querySelector('#canvas'), // Optional, automatically generated canvas hanging on game.canvas\r\n        width: 276,\r\n        height: 478,\r\n        transparent: false,\r\n        resolution: window.devicePixelRatio / 2, // Optional, if it is 2 times the image design, it can be divided by 2\r\n        enableScroll: true, // Enable page scrolling\r\n        renderType: 0 // 0: automatic judgment, 1: WebGL, 2: Canvas, it is recommended to use Canvas below android6.1 ios9, business judgment is required.\r\n    })\r\n\r\n    const game = new Game({\r\n        frameRate: 60, // Optional, game frame rate, default 60\r\n        autoStart: true, // optional, start automatically\r\n        systems: [\r\n            rendererSystem,\r\n            new GraphicsSystem(),\r\n            new ImgSystem()\r\n        ]\r\n    })\r\n\r\n    const bg = new GameObject('bg', {\r\n        position: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        origin: {\r\n            x: 0.5,\r\n            y: 0.5\r\n        }\r\n    })\r\n\r\n    const g = bg.addComponent(new Graphics())\r\n    g.graphics.beginFill(bgcolor, 1)\r\n    g.graphics.drawRect(0, 0, 276, 478, 12)\r\n    g.graphics.endFill()\r\n    game.scene.addChild(bg)\r\n\r\n\r\n    const image = new GameObject('chrome', {\r\n        size: size,\r\n        origin: { x: 0.5, y: 0.5 },\r\n        position: postion,\r\n        scale: {\r\n            x: 0.5,\r\n            y: 0.5\r\n        }\r\n    })\r\n\r\n    // 为 game object 添加 Image Component\r\n    image.addComponent(\r\n        new Img({\r\n            resource: imageRes.name\r\n        })\r\n    )\r\n    game.scene.addChild(image)\r\n\r\n    return (\r\n        <div className=\"preview\">\r\n            <img className=\"iphone\" src=\"iphone.png\" width=\"300\" alt=\"\" />\r\n            {/* <div className=\"previewCanvas\"></div> */}\r\n            <canvas id=\"canvas\" ref={canvasRef} className=\"previewCanvas\"></canvas>\r\n        </div>\r\n    )\r\n}\r\nexport default Preview","import { createForm } from '@formily/core'\r\nimport { FormProvider, Field, FormConsumer } from '@formily/react'\r\nimport { FormButtonGroup, FormItem, FormLayout, Input, Submit } from '@formily/antd'\r\nimport '@formily/antd/dist/antd.css';\r\nimport 'antd/dist/antd.css';\r\nimport { useMemo } from 'react';\r\nimport React from 'react';\r\nimport Color from \"./components/color\"\r\nimport { InputNumber } from 'antd';\r\nimport { Checkbox } from 'antd';\r\nconst CheckboxGroup = Checkbox.Group\r\n\r\nconst Components: any = {\r\n    Input, Color, InputNumber, CheckboxGroup, Checkbox\r\n}\r\nconst getComponentByName = (name: string) => {\r\n    let component = null\r\n    for (const key in Components) {\r\n        if (key === name) {\r\n            component = Components[key]\r\n        }\r\n    }\r\n    return component\r\n}\r\n\r\nconst PropertiesPanel = ({ id, type, fields, update }: any) => {\r\n    const form = useMemo(\r\n        () =>\r\n            createForm(),\r\n        [fields],\r\n    );\r\n    return (\r\n        <div className=\"PropertiesPanel\">\r\n\r\n            <FormProvider form={form}>\r\n                <h2>{type}</h2>\r\n                <FormLayout layout=\"vertical\">\r\n                    {\r\n                        fields.map((field: any) => {\r\n                            return (\r\n                                <div key={field.key}>\r\n                                    <Field\r\n                                        name={field.name}\r\n                                        title={field.title}\r\n                                        required\r\n                                        initialValue={field.value}\r\n                                        decorator={[FormItem]}\r\n                                        component={[getComponentByName(field.component)]}\r\n                                    /></div>\r\n                            )\r\n                        })\r\n                    }\r\n                </FormLayout>\r\n                <FormButtonGroup>\r\n                    <Submit hidden={fields.length < 1} onSubmit={(values) => {\r\n                        update(id, type, values)\r\n                    }}>应用</Submit>\r\n                </FormButtonGroup>\r\n            </FormProvider>\r\n        </div>\r\n    )\r\n}\r\nexport default PropertiesPanel","import 'rc-color-picker/assets/index.css';\r\nimport { Panel as ColorPickerPanel } from 'rc-color-picker';\r\nimport { useState } from 'react';\r\nexport default function Color({ onChange, value }: any) {\r\n    const [color, setColor] = useState(value)\r\n    const _onChange = (value: any) => {\r\n        console.log(value.color)\r\n        setColor(color)\r\n        onChange(value.color)\r\n    }\r\n    return (\r\n        <div style={{ padding:10 }}>\r\n            <ColorPickerPanel enableAlpha={false} color={color} onChange={_onChange} mode=\"RGB\" />\r\n        </div>\r\n    )\r\n}","const nodes: any[] = [\n    {\n        id: 'game',\n        type: \"Game\",\n        data: { label: 'Game' },\n        position: { x: 600, y: 300 },\n    },\n    {\n        id: 'default_scene',\n        type: \"Scene\",\n        data: { label: 'default' },\n        position: { x: 450, y: 350 },\n    },\n    {\n        id: 'config',\n        type: \"Config\",\n        data: {\n            label: 'Config',\n            fields: [\n                {\n                    name: \"PhysicsSystem\",\n                    title: \"PhysicsSystem\",\n                    component: \"Checkbox\",\n                    dataSource: [\n                        {\n                            label: '选项1',\n                            value: 1,\n                        },\n                        {\n                            label: '选项2',\n                            value: 2,\n                        },\n                    ],\n                    value: \"1\"\n                }\n            ]\n        },\n        position: { x: 450, y: 250 },\n    },\n    {\n        id: 'background_gameobject',\n        type: \"GameObject\",\n        data: {\n            label: 'background',\n            fields: [\n                {\n                    name: \"name\",\n                    title: \"name\",\n                    component: \"Input\",\n                    value: \"background\"\n                }\n            ]\n        },\n        position: { x: 250, y: 200 },\n    },\n    {\n        id: 'player_gameobject',\n        type: \"GameObject\",\n        data: {\n            label: 'player',\n            fields: [\n                {\n                    name: \"name\",\n                    title: \"name\",\n                    component: \"Input\",\n                    value: \"player\"\n                }\n            ]\n        },\n        position: { x: 250, y: 400 },\n    },\n    {\n        id: 'background_component',\n        type: \"Graphics\",\n        data: {\n            label: 'background',\n            fields: [\n                {\n                    name: \"name\",\n                    title: \"name\",\n                    component: \"Input\",\n                    value: \"background\"\n                },\n                {\n                    name: \"color\",\n                    title: \"color\",\n                    component: \"Color\"\n                }\n            ]\n        },\n        position: { x: 50, y: 100 },\n    },\n    {\n        id: 'Transform_for_bg',\n        type: \"Transform\",\n        data: {\n            label: 'Transform',\n            fields: [\n                {\n                    name: 'name',\n                    title: 'name',\n                    value: 'Transform',\n                    component: \"Input\"\n                },\n                {\n                    name: 'x',\n                    title: 'x',\n                    value: 0,\n                    component: \"InputNumber\"\n                },\n                {\n                    name: 'y',\n                    title: 'y',\n                    value: 0,\n                    component: \"InputNumber\"\n                },\n                {\n                    name: \"width\",\n                    title: \"width\",\n                    component: \"InputNumber\",\n                    value: 276\n                },\n                {\n                    name: \"height\",\n                    title: \"height\",\n                    component: \"InputNumber\",\n                    value: 478\n                }\n            ]\n        },\n        position: { x: 50, y: 200 },\n    },\n    {\n        id: 'Transform_for_player',\n        type: \"Transform\",\n        data: {\n            label: 'Transform',\n            fields: [\n                {\n                    name: 'x',\n                    title: 'x',\n                    value: 100,\n                    component: \"InputNumber\"\n                },\n                {\n                    name: 'y',\n                    title: 'y',\n                    value: 100,\n                    component: \"InputNumber\"\n                },\n                {\n                    name: \"width\",\n                    title: \"width\",\n                    component: \"InputNumber\",\n                    value: 100\n                },\n                {\n                    name: \"height\",\n                    title: \"height\",\n                    component: \"InputNumber\",\n                    value: 100\n                }\n            ]\n        },\n        position: { x: 50, y: 450 },\n    },\n    {\n        id: 'image',\n        type: \"Image\",\n        data: {\n            label: 'Image',\n            fields: [\n                {\n                    name: 'name',\n                    title: 'name',\n                    value: 'image',\n                    component: \"Input\"\n                },\n                {\n                    name: 'src',\n                    title: 'src',\n                    value: 'https://codetyphon.github.io/eva-editor/chrome-100.png',\n                    component: \"Input\"\n                }\n            ]\n        },\n        position: { x: 50, y: 350 },\n    },\n    // link edge\n    { id: 'e1', source: 'config', target: 'game' },\n    { id: 'e2', source: 'default_scene', target: 'game' },\n    { id: 'e3', source: 'background_gameobject', target: \"default_scene\" },\n    { id: 'e4', source: \"background_component\", target: \"background_gameobject\" },\n    { id: 'e5', source: \"player_gameobject\", target: \"default_scene\" },\n    { id: 'e6', source: \"Transform_for_player\", target: \"player_gameobject\" },\n    { id: 'e7', source: \"image\", target: \"player_gameobject\" },\n    { id: 'e8', source: \"Transform_for_bg\", target: \"background_gameobject\" },\n    \n]\n\nexport default nodes","import React, { useEffect, useState } from 'react';\nimport ReactFlow, { Handle, Position, Controls, removeElements, addEdge, Elements, Connection, Edge } from 'react-flow-renderer';\nimport './App.css';\nimport nodeTypes from './nodeTypes';\nimport Preview from './preview';\nimport PropertiesPanel from './propertiesPanel';\nimport { v4 as uuidv4 } from 'uuid';\nimport nodes from './nodes';\n\nfunction App() {\n  const [confs, setConfs] = useState<any[]>([])\n  const [elements, setElements] = useState<any[]>([])\n  const [id, setId] = useState<string>(\"\")\n  const [type, setType] = useState<string>(\"\")\n  const [fields, setFields] = useState<any[]>([])\n  const onElementClick = (_event: any, node: any) => {\n    console.log(node)\n    const { id, type, data } = node\n    const fields = data.fields || []\n    console.log(id, type, fields)\n    setId(id)\n    setType(type)\n    fields.map((field: any) => {\n      return field.key = uuidv4()\n    })\n    setFields(fields)\n  }\n\n  const onElementsRemove = (elementsToRemove: Elements<any>) => {\n    setElements((els) => removeElements(elementsToRemove, els));\n  }\n\n  const onConnect = (params: Edge<any> | Connection) => {\n    setElements((els) => addEdge(params, els));\n  }\n\n  useEffect(() => {\n    setElements(nodes)\n  }, [])\n\n  const update = (id: string, type: string, kv: any) => {\n    console.log(id, type, kv)\n    setConfs([\n      {\n        id, type, kv\n      }\n    ])\n  }\n  return (\n    <div className=\"app\">\n      <Preview confs={confs} />\n      <div className=\"canvas\">\n        <ReactFlow\n          onElementClick={onElementClick}\n          elements={elements}\n          nodeTypes={nodeTypes}\n          onConnect={onConnect}\n          onElementsRemove={onElementsRemove}\n          deleteKeyCode={46} /* 'delete'-key */\n        >\n          <Controls />\n        </ReactFlow>\n      </div>\n      <PropertiesPanel id={id} type={type} fields={fields} update={update} />\n    </div>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}